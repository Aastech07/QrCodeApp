import React, { useState, useRef,useEffect } from 'react';
import { View, Text, TextInput, TouchableOpacity, ScrollView } from 'react-native';
import QRCode from 'react-native-qrcode-svg';
import FontAwesome5 from 'react-native-vector-icons/FontAwesome5';
import ViewShot from 'react-native-view-shot';
import * as MediaLibrary from 'expo-media-library';
import * as ImagePicker from 'expo-image-picker';


const QrGenerate = () => {
  const [input, setInput] = useState('');
  const [qrcode, setQrcode] = useState('');
  const viewShotRef = useRef();



  useEffect(() => {
    // Request permission to access media library if not granted
    (async () => {
      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();
      if (status !== 'granted') {
        alert('Permission to access media library required!');
      }
    })();
  }, []);




  const viewShareFunc = async () => {
    try {
      if (viewShotRef.current) {
        const imageUri = await viewShotRef.current.capture();
        console.log(imageUri);
        if (!imageUri.cancelled) {
          const result = await ImagePicker.saveToLibraryAsync(imageUri, 'photo');
          if (result) {
            alert('Image saved to gallery!');
          } else {
            alert('Failed to save image to gallery.');
          }
        }
      } else {
        console.error('ViewShot ref is undefined.');
      }
    } catch (error) {
      console.error('Error capturing view or sharing:', error);
    }
  };
  

  return (
    <ScrollView style={{ flex: 1 }} contentContainerStyle={{ paddingBottom: 400 }}>
      <Text style={{ color: '#3E54AC', fontWeight: 'bold', fontSize: 20, position: 'absolute', alignSelf: 'center', top: 20 }}>
        Generation of QR Code in APX.
      </Text>
      <View style={{ alignSelf: 'center', top: 90, right: 160 }}>
        <FontAwesome5 name="qrcode" size={25} color="black" style={{ left: 20, top: 10, opacity: 0.3 }} />
        <TextInput
          style={{ top: 10, left: 50, position: 'absolute' }}
          placeholder="Generate QR Code..."
          onChangeText={(text) => setInput(text)}
          value={input}
        />
      </View>
      <View style={{ top: 100, position: 'absolute', left: 250 }}>
        <TouchableOpacity
          onPress={() => setQrcode(input)}
          style={{
            borderWidth: 1,
            padding: 6,
            paddingLeft: 40,
            backgroundColor: '#000',
            elevation: 7,
            paddingRight: 40,
            borderRadius: 4,
            right: 15,
          }}>
          <Text style={{ color: 'white', fontWeight: 'bold' }}>Click</Text>
        </TouchableOpacity>
      </View>

      <View style={{ top: 150, alignSelf: 'center' }}>
        <ViewShot ref={viewShotRef} options={{ format: 'jpg', quality: 0.9, result: 'base64' }}>
          <QRCode value={qrcode ? qrcode : 'NA'} size={320} color={'#000'} backgroundColor="white" />
        </ViewShot>
      </View>

      <View style={{ top: 200, alignSelf: 'center' }}>
        <TouchableOpacity
          onPress={()=>viewShareFunc()}
          style={{
            borderWidth: 1,
            padding: 6,
            paddingLeft: 20,
            paddingRight: 20,
            backgroundColor: '#000',
            elevation: 7,
            borderRadius: 4,
            margin: 10,
          }}>
          <Text style={{ color: 'white', fontWeight: 'bold' }}>Share</Text>
        </TouchableOpacity>
      </View>
    </ScrollView>
  );
};

export default QrGenerate;
